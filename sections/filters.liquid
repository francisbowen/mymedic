<style>
	#Collection .filters-toolbar .full.sidebar-filter {
		border-color: {{ section.settings.border_color }};	
	}
	#Collection .filters-toolbar .full.sidebar-filter h5 {
		color: {{ section.settings.title_color }};
	}
	#Collection .filters-toolbar .full.sidebar-filter h5:after{
		color: {{ section.settings.icon_color }};
	}
	#Collection .filters-toolbar .full.sidebar-filter.checkbox label,
	#Collection .filters-toolbar .full.sidebar-filter.radiobutton label {
		color: {{ section.settings.option_color }};
	}

	#Collection .filters-toolbar .full.sidebar-filter.button input[type="checkbox"]+label {
		color: {{ section.settings.button_text_color }};
		background-color: {{ section.settings.button_background_color }};
		border-color: {{ section.settings.button_text_color }};
	}

	#Collection .filters-toolbar .full.sidebar-filter.button input[type="checkbox"]:checked+label {
		color: {{ section.settings.button_active_text_color }};
		background-color: {{ section.settings.button_active_background_color }};
		border-color: {{ section.settings.button_active_background_color }}
	}
</style>

<div id="filters-content">

  <div class="full sidebar-filter show current_filter button">
    <h5>Current filters</h5>
    <div class="option_buttons"></div>
  </div>

  {% for block in section.blocks %}

    {% if block.settings.enable %}
      {%- assign fitler_tags = block.settings.filter_tags | strip_newlines | replace: ', ', ',' | replace: ' ,', ',' | split: ',' -%}
      {%- assign filter_used = 0 -%}
      {%- assign filter_content = '' -%}

      {% for filter_tag in fitler_tags %}
        {% if collection.all_tags contains filter_tag %}
          {%- assign filter_used = filter_used | plus: 1 -%}
          {% capture filter_content %}
            {{ filter_content }}
            <div class="filter-element">
              <input name="SortTags_{{ block.settings.title | handleize }}_{{ forloop.index }}" 
                type="checkbox" value="{{ filter_tag }}" 
                id="{{ filter_tag | handleize }}" 
                data-title="{{ block.settings.title | handleize }}" />
              <label 
                {% if block.settings.filter_type == 'color_swatch' %}
                id="{{ filter_tag | remove: block.settings.filter_tags_removal }}"
                {% endif %}
                for="{{ filter_tag | handleize }}">
                {{ filter_tag | remove: block.settings.filter_tags_removal }}
              </label>
            </div>
          {% endcapture %}
        {% endif %}
      {% endfor %}

      {% if filter_used > 1 %}
        <div class="full sidebar-filter {{ block.settings.filter_type }} show">
          <h5>{{ block.settings.title }}</h5>
          <div class="option_buttons">
            {{ filter_content }}
          </div>
        </div>
      {% endif %}

    {% endif %}
  {% endfor %}

</div>

<script>
  function getUrlParameter(sParam) {
    var sPageURL = window.location.search.substring(1),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
      sParameterName = sURLVariables[i].split('=');
      if (sParameterName[0] === sParam) {
        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
      }
    }
  };
  
  var price_range = getUrlParameter('prices'),
      sorted = getUrlParameter('sort_by');
  $(document).ready(function(){
    $('.full.sidebar-filter h5').click(function() {
      $(this).closest( ".sidebar-filter" ).toggleClass( "show" );
    });
    
    $('#filters-content').contents().appendTo('.filters-toolbar-placeholder');
    
    $('body').on('change', '.sidebar-filter input',function(e){
      e.preventDefault();
      var params = [],
          titles = [],
          str = '';
      $('.sidebar-filter input:checked').each(function(){
        if($(this).val() != '') {
          params.push($(this).val());
          titles.push($(this).data('title'));
        }
      });
      $.each( params, function(i,v){
        if (params.length > 1) {
          var j = i - 1;
          if (i != 0 && titles[j] !== titles[i]) {
            str += '&';
          }
          if (titles[j] !== titles[i]){
            str += titles[i] +'=';
          } else {
            str += '+';
          }
        } else {
          str += titles[i] +'=';
        }
        str += v;
      });
      if (typeof price_range !== 'undefined') {
        str += '&prices='+ price_range;
      }
      if (typeof sorted !== 'undefined') {
        str += '&sort_by='+ sorted;
      }
      update_result_product_range(str)
    });
  });
</script>


{% schema %}
  {
    "name": "Collection page filters",
    "class": "hide",
    "settings": [
		{
			"type": "header",
			"content": "Colors"
		},
		{
			"type": "color",
			"id": "title_color",
			"label": "Title color",
			"default": "#000"
		},
		{
			"type": "color",
			"id": "option_color",
			"label": "Option color",
			"default": "#000"
		},
		{
			"type": "color",
			"id": "border_color",
			"label": "Border color",
			"default": "#808080"
		},
		{
			"type": "color",
			"id": "icon_color",
			"label": "Icon color",
			"default": "#808080"
		},
		{
			"type": "color",
			"id": "button_text_color",
			"label": "Button text color",
			"default": "#000"
		},
		{
			"type": "color",
			"id": "button_background_color",
			"label": "Button background color",
			"default": "#fff"
		},
		{
			"type": "color",
			"id": "button_active_text_color",
			"label": "Button active - text color",
			"default": "#fff"
		},
		{
			"type": "color",
			"id": "button_active_background_color",
			"label": "Button active - background color",
			"default": "#454142"
		}
    ],
    "blocks": [
      {
        "type": "collection_filters",
        "name": "Collection Filters",
        "settings": [
        {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
        },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Name"
          },
          {
            "type": "textarea",
            "id": "filter_tags",
            "label": "Tags",
            "info": "Separate with a comma"
          },
          {
            "type": "text",
            "id": "filter_tags_removal",
            "label": "Part of tag to remove for display"
          },
		  {
			"type": "select",
			"id": "filter_type",
			"label": "Filter type",
			"default": "radiobutton",
			"options": [
				{
					"value": "radiobutton",
					"label": "Radio Button"
				},
				{
					"value": "checkbox",
					"label": "Checkbox"
				},
				{
					"value": "color_swatch",
					"label": "Color swatch"
				},
				{
					"value": "button",
					"label": "Button"
				}
			]
		  }
		
        ]
      }
    ]
  }
{% endschema %}
